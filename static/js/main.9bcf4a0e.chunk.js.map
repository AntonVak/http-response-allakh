{"version":3,"sources":["components/AddJoke.module.css","components/Joke.module.css","components/JokeList.module.css","components/Joke.js","components/JokeList.js","components/AddJoke.js","App.js","index.js"],"names":["module","exports","Joke","props","className","styles","joke","type","setup","punchline","JokeList","jokes","map","key","id","AddJoke","onAddJoke","typeRef","useRef","setupRef","punchlineRef","onSubmit","e","preventDefault","current","value","control","htmlFor","ref","rows","App","useState","setJokes","isLoading","setIsLoading","error","setError","fetchJokeHandler","useCallback","fetch","response","ok","Error","json","data","loadedJokes","push","message","method","body","JSON","stringify","headers","console","log","useEffect","Fragment","onClick","ReactDOM","render","document","getElementById"],"mappings":";4HACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,YAAY,8B,uLCafC,EAVF,SAACC,GACZ,OACE,wBAAIC,UAAWC,IAAOC,MACpB,4BAAKH,EAAMI,MACX,4BAAKJ,EAAMK,OACX,4BAAKL,EAAMM,a,gBCWFC,EAfE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACjB,OACE,wBAAIP,UAAWC,IAAO,cACnBM,EAAMC,KAAI,SAACN,GAAD,OACT,kBAAC,EAAD,CACEO,IAAKP,EAAKQ,GACVP,KAAMD,EAAKC,KACXC,MAAOF,EAAKE,MACZC,UAAWH,EAAKG,iB,wBC8BXM,EAxCC,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACVC,EAAUC,iBAAO,IACjBC,EAAWD,iBAAO,IAClBE,EAAeF,iBAAO,IAY5B,OACE,0BAAMG,SAXc,SAACC,GACrBA,EAAEC,iBACF,IAAMjB,EAAO,CACXC,KAAMU,EAAQO,QAAQC,MACtBjB,MAAOW,EAASK,QAAQC,MACxBhB,UAAWW,EAAaI,QAAQC,OAElCT,EAAUV,KAKR,yBAAKF,UAAWC,IAAOqB,SACrB,2BAAOC,QAAQ,IAAf,QACA,2BAAOpB,KAAK,OAAOO,GAAG,OAAOc,IAAKX,KAEpC,yBAAKb,UAAWC,IAAOqB,SACrB,2BAAOC,QAAQ,SAAf,SACA,8BAAUE,KAAM,EAAGtB,KAAK,OAAOO,GAAG,QAAQc,IAAKT,KAEjD,yBAAKf,UAAWC,IAAOqB,SACrB,2BAAOC,QAAQ,aAAf,aACA,8BACEE,KAAM,EACNtB,KAAK,OACLO,GAAG,YACHc,IAAKR,KAIT,8C,yyMCwCSU,MAvEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOpB,EAAP,KAAcqB,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAGMC,EAAmBC,sBAAW,sBAAC,iGACnCJ,GAAa,GACbE,EAAS,MAF0B,kBAIVG,MACrB,kEAL+B,WAI3BC,EAJ2B,QAOpBC,GAPoB,sBAQzB,IAAIC,MAAM,eARe,wBAUdF,EAASG,OAVK,QAajC,IAAW9B,KAHL+B,EAV2B,OAW3BC,EAAc,GAEFD,EAChBC,EAAYC,KAAK,CACfhC,GAAID,EACJN,KAAMqC,EAAK/B,GAAKN,KAChBC,MAAOoC,EAAK/B,GAAKL,MACjBC,UAAWmC,EAAK/B,GAAKJ,YAGzBuB,EAASa,GArBwB,kDAwBjCT,EAAS,KAAMW,SAxBkB,QA2BnCb,GAAa,GA3BsB,0DA4BlC,IAlCU,4CAwCb,WAA8B5B,GAA9B,yFACyBiC,MAAM,iEAAkE,CAC7FS,OAAQ,OACRC,KAAMC,KAAKC,UAAU7C,GACrB8C,QAAS,CACP,eAAgB,sBALtB,cACQZ,EADR,gBAQqBA,EAASG,OAR9B,OAQQC,EARR,OASES,QAAQC,IAAIV,GATd,4CAxCa,sBAqDb,OAjBAW,qBAAU,WACRlB,MACC,CAACA,IAgBF,kBAAC,IAAMmB,SAAP,KACA,iCACE,kBAAC,EAAD,CAASxC,UAxDA,+CA0DT,iCACE,4BAAQyC,QAASpB,GAAjB,gBAEF,iCAECJ,EAAY,+CAA0B,kBAAC,EAAD,CAAUtB,MAAOA,KAEtDsB,GAAaE,GAAS,2BAAIA,MClElCuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9bcf4a0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddJoke_control__3SLrs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"joke\":\"Joke_joke__2rR0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"joke-list\":\"JokeList_joke-list__3xe8l\"};","import React from \"react\";\n\nimport styles from \"./Joke.module.css\";\n\nconst Joke = (props) => {\n  return (\n    <li className={styles.joke}>\n      <h2>{props.type}</h2>\n      <h3>{props.setup}</h3>\n      <h3>{props.punchline}</h3>\n    </li>\n  );\n};\n\nexport default Joke;\n","import React from \"react\";\n\nimport Joke from \"./Joke\";\nimport styles from \"./JokeList.module.css\";\n\nconst JokeList = ({jokes}) => {\n  return (\n    <ul className={styles[\"joke-list\"]}>\n      {jokes.map((joke) => (\n        <Joke\n          key={joke.id}\n          type={joke.type}\n          setup={joke.setup}\n          punchline={joke.punchline}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default JokeList;\n","import React, { useRef } from \"react\";\r\nimport styles from './AddJoke.module.css'\r\n\r\nconst AddJoke = ({onAddJoke}) => {\r\n  const typeRef = useRef(\"\");\r\n  const setupRef = useRef(\"\");\r\n  const punchlineRef = useRef(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const joke = {\r\n      type: typeRef.current.value,\r\n      setup: setupRef.current.value,\r\n      punchline: punchlineRef.current.value,\r\n    };\r\n    onAddJoke(joke);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"\">Type</label>\r\n        <input type=\"text\" id=\"type\" ref={typeRef} />\r\n      </div>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"setup\">Setup</label>\r\n        <textarea rows={5} type=\"text\" id=\"setup\" ref={setupRef}></textarea>\r\n      </div>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"punchline\">Punchline</label>\r\n        <textarea\r\n          rows={5}\r\n          type=\"text\"\r\n          id=\"punchline\"\r\n          ref={punchlineRef}\r\n          \r\n        ></textarea>\r\n      </div>\r\n      <button>Add Joke</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddJoke;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport JokeList from \"./components/JokeList\";\nimport \"./App.css\";\nimport { useCallback } from \"react\";\nimport AddJoke from \"./components/AddJoke\";\n\nfunction App() {\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  // console.log(!isLoading)\n\n  const fetchJokeHandler = useCallback(async () => {\n    setIsLoading(true)\n    setError(null)\n    try {\n      const response = await fetch(\n        \"https://react-base-http-default-rtdb.firebaseio.com/jokes.json\"\n      );\n      if(!response.ok){\n        throw new Error('oooooops...')\n      }\n      const data = await response.json();\n      const loadedJokes = [];\n\n      for (const key in data) {\n        loadedJokes.push({\n          id: key,\n          type: data[key].type,\n          setup: data[key].setup,\n          punchline: data[key].punchline,\n        });\n      }\n      setJokes(loadedJokes);\n\n    } catch (error) {\n      setError(error.message)\n      \n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchJokeHandler()\n  }, [fetchJokeHandler]);\n\n  async function addJokeHandler(joke) {\n    const response = await fetch('https://react-base-http-default-rtdb.firebaseio.com/jokes.json', {\n      method: 'POST',\n      body: JSON.stringify(joke),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n    const data = await response.json();\n    console.log(data);\n    \n  }\n\n  return (\n    <React.Fragment>\n    <section>\n      <AddJoke onAddJoke={addJokeHandler}/>\n    </section>\n      <section>\n        <button onClick={fetchJokeHandler}>Fetch Jokes</button>\n      </section>\n      <section>\n      \n      {isLoading ? <p>Loading jokes...</p> : <JokeList jokes={jokes}/> }\n      \n      {!isLoading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}